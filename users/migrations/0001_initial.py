# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-03-15 07:51
from __future__ import unicode_literals

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('address', models.CharField(blank=True, default='', max_length=130, null=True, verbose_name='地址')),
                ('mobile', models.CharField(max_length=11, verbose_name='手机号')),
                ('wechatName', models.CharField(blank=True, max_length=20, null=True, verbose_name='微信名')),
                ('wechat', models.CharField(blank=True, max_length=20, null=True, verbose_name='微信号')),
                ('qq', models.CharField(blank=True, max_length=13, null=True, verbose_name='qq')),
                ('alipay', models.CharField(blank=True, max_length=20, null=True, verbose_name='alipay')),
                ('bankName', models.CharField(choices=[('zsbank', '招商银行'), ('zgbank', '中国银行'), ('jsbank', '建设银行'), ('gsbank', '工商银行'), ('nybank', '农业银行'), ('jtbank', '交通银行')], max_length=9, null=True, verbose_name='银行')),
                ('bankID', models.CharField(blank=True, max_length=20, null=True, verbose_name='银行')),
                ('realname', models.CharField(blank=True, max_length=20, null=True, verbose_name='真名')),
                ('image', models.ImageField(default='image/default.png', null=True, upload_to='image/Userimage/%Y/%m')),
                ('referrercode', models.CharField(blank=True, max_length=40, null=True, verbose_name='推荐号')),
                ('remark', models.CharField(blank=True, max_length=255, null=True, verbose_name='备注')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户信息',
                'verbose_name_plural': '用户信息',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
